# Generated by Django 4.2 on 2024-09-08 01:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="カテゴリー名")),
            ],
            options={
                "verbose_name_plural": "Category",
            },
        ),
        migrations.CreateModel(
            name="FavoriteRestaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Favorite",
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reservation_date", models.DateTimeField(verbose_name="予約日")),
                (
                    "number_of_people",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="人数"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("予約受付", "予約受付"), ("予約完了", "予約完了"), ("予約取消", "予約取消")],
                        max_length=50,
                        verbose_name="予約ステータス",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="登録日"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新日")),
                ("deleted_at", models.DateTimeField(auto_now=True, verbose_name="削除日")),
            ],
            options={
                "verbose_name_plural": "Reservation",
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="店名")),
                (
                    "postal_code",
                    models.CharField(
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Postal Code must be entered in the format: '1234567'. Up to 7 digits allowed.",
                                regex="^[0-9]+$",
                            )
                        ],
                        verbose_name="郵便番号",
                    ),
                ),
                ("address", models.CharField(max_length=200, verbose_name="住所")),
                (
                    "tel_number",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Tel Number must be entered in the format: '09012345678'. Up to 15 digits allowed.",
                                regex="^[0-9]+$",
                            )
                        ],
                        verbose_name="電話番号",
                    ),
                ),
                (
                    "e_mail",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-Mail"
                    ),
                ),
                ("url", models.URLField(blank=True, null=True, verbose_name="店舗URL")),
                (
                    "price_max",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="予算上限"
                    ),
                ),
                (
                    "price_min",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="予算下限"
                    ),
                ),
                ("rate", models.FloatField(default=0.0, verbose_name="レート")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="登録日"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="更新日"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="削除日"),
                ),
            ],
            options={
                "verbose_name_plural": "Restaurant",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rate",
                    models.PositiveIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        default=5,
                        verbose_name="評価",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="コメント"),
                ),
                ("visited_at", models.DateField(verbose_name="利用日")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="登録日"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="更新日"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="削除日"),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="restaurant.restaurant",
                        verbose_name="店名",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="会員氏名",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Review",
            },
        ),
        migrations.CreateModel(
            name="RestaurantCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="restaurant.category",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="restaurant.restaurant",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="restaurant",
            constraint=models.UniqueConstraint(
                fields=("name", "postal_code"), name="unique_restaurant"
            ),
        ),
        migrations.AddField(
            model_name="reservation",
            name="restaurant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="restaurant.restaurant",
                verbose_name="店名",
            ),
        ),
        migrations.AddField(
            model_name="reservation",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
                verbose_name="会員氏名",
            ),
        ),
        migrations.AddField(
            model_name="favoriterestaurant",
            name="restaurant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="restaurant.restaurant"
            ),
        ),
        migrations.AddField(
            model_name="favoriterestaurant",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                fields=("name",), name="unique_category_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.UniqueConstraint(
                fields=("restaurant", "user", "visited_at"), name="unique_review"
            ),
        ),
        migrations.AddConstraint(
            model_name="restaurantcategory",
            constraint=models.UniqueConstraint(
                fields=("restaurant_id", "category_id"), name="unique_category"
            ),
        ),
        migrations.AddConstraint(
            model_name="reservation",
            constraint=models.UniqueConstraint(
                fields=("restaurant", "user", "reservation_date"),
                name="unique_reservation",
            ),
        ),
        migrations.AddConstraint(
            model_name="favoriterestaurant",
            constraint=models.UniqueConstraint(
                fields=("restaurant", "user"), name="unique_favorite"
            ),
        ),
    ]
